title: "Benchmarking NER pipelines for gold-annotated Tagalog corpora"

vars:
  dataset: tl_tlunified_gold
  seed: 42
  gpu_id: 0
  init_tok2vec: null
  vectors: null
  config: baseline
  trial_num: 0
  experiment_id: "baseline"

directories:
  - "assets"
  - "configs"
  - "corpus"
  - "vectors"
  - "scripts"
  - "training"
  - "pretraining"
  - "metrics"

assets:
  - dest: "assets/tlunified.zip"
    description: "TLUnified dataset (from Improving Large-scale Language Models and Resources for Filipino by Cruz and Cheng 2022)"
    url: "https://s3.us-east-2.amazonaws.com/blaisecruz.com/datasets/tlunified/tlunified.zip"
  - dest: "assets/fasttext.tl.gz"
    description: "Tagalog fastText vectors"
    url: "https://dl.fbaipublicfiles.com/fasttext/vectors-crawl/cc.tl.300.vec.gz"
  - dest: "assets/tlunified_pt_chars.bin"
    description: "Pretrained weights (characters) from TLUnified using `baseline` config"
    url: ""
  - dest: "assets/tlunified_pt_vects.bin"
    description: "Pretrained weights (vectors) from TLUnified using `fastText` config"
    url: ""

workflows:
  ner:
    - "convert"
    - "train-ner"
    - "evaluate"

commands:
  - name: "convert"
    help: "Convert raw annotations into spaCy files."
    script:
      - "python -m scripts.convert ${vars.dataset}-train.jsonl corpus/train.spacy"
      - "python -m scripts.convert ${vars.dataset}-dev.jsonl corpus/dev.spacy"
      - "python -m scripts.convert ${vars.dataset}-test.jsonl corpus/test.spacy"
    deps:
      - ${vars.dataset}-train.jsonl
      - ${vars.dataset}-dev.jsonl
      - ${vars.dataset}-test.jsonl
    outputs:
      - corpus/train.spacy
      - corpus/dev.spacy
      - corpus/test.spacy

  - name: "raw-text"
    help: "Get raw text as preparation for pretraining"
    script:
      - unzip -o assets/tlunified.zip -d assets/
      - cp assets/tlunified/train.text assets/raw_text.txt
    outputs:
      - assets/raw_text.txt

  - name: "init-fasttext"
    help: "Initialize fastText vectors."
    script:
      - "gzip -d assets/fasttext.tl.gz"
      - "python -m spacy init vectors tl assets/fasttext.tl vectors/fasttext-tl"
    deps:
      - assets/fasttext.tl.gz
    outputs:
      - vectors/fasttext-tl

  - name: "pretrain"
    help: "Pretrain with information from raw text"
    script:
      - >-
        python -m spacy pretrain configs/${vars.config}.cfg pretraining/${vars.config}/
        --paths.raw_text assets/tlunified/train.txt
        --vars.vectors ${vars.vectors}
        --gpu-id ${vars.gpu_id}
    deps:
      - assets/tlunified.zip
    outputs:
      - pretraining/${vars.config}/

  - name: "train-ner"
    help: "Train NER model."
    script:
      - >-
        python -m spacy train
        configs/${vars.config}.cfg
        --nlp.lang tl
        --output training/${vars.config}/${vars.seed}/
        --paths.train corpus/train.spacy
        --paths.dev corpus/dev.spacy
        --initialize.init_tok2vec ${vars.init_tok2vec}
        --vars.vectors ${vars.vectors}
        --system.seed ${vars.seed}
        --gpu-id ${vars.gpu_id}
    deps:
      - corpus/train.spacy
      - corpus/dev.spacy
    outputs:
      - training/${vars.config}/${vars.seed}/model-best
      - training/${vars.config}/${vars.seed}/model-last

  - name: "evaluate"
    help: "Evaluate NER model."
    script:
      - mkdir -p metrics/${vars.experiment_id}/${vars.config}/trial-${vars.trial_num}/
      - >-
        python -m spacy evaluate
        training/${vars.config}/${vars.seed}/model-best
        corpus/test.spacy
        --output metrics/${vars.experiment_id}/${vars.config}/trial-${vars.trial_num}/scores.json
        --gpu-id ${vars.gpu_id}
    deps:
      - training/${vars.config}/${vars.seed}/model-best
      - corpus/test.spacy
    outputs:
      - metrics/${vars.experiment_id}/${vars.config}/trial-${vars.trial_num}/scores.json
