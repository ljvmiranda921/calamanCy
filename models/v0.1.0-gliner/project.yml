title: "Release v0.1.0-gliner"
description: |
  This is a spaCy project that trains and evaluates new v0.1.0-gliner models.
  [GliNER](https://github.com/urchade/GLiNER) (Generalist and Lightweight Model for Named Entity Recognition) is a powerful model capable of identifying any entity type using a BERT-like encoder.
  In this project, we finetune the GliNER model using the TLUnified-NER dataset.

  To replicate training, first you need to install the required dependencies:

  ```sh
  pip install -r requirements.txt
  ```

  ## Training

  To train a GliNER model, run the `finetune-gliner` workflow while passing the size:

  ```sh
  # Available options: 'small', 'medium', 'large'
  python -m spacy project run finetune-gliner . --vars.size small
  ```

  The models are currently [based on the v2.5 version of GliNER](https://huggingface.co/collections/urchade/gliner-v25-66743e64ab975c859119d1eb).

  ## Evaluation

  To perform evals, run the `eval-gliner` workflow while passing the size:

  ```sh
  # Available options: 'small', 'medium', 'large'
  python -m spacy project run eval-gliner . --vars.size small
  ```

  This will evaluate on TLUnified-NER's test set ([Miranda, 2023](https://aclanthology.org/2023.sealp-1.2.pdf)) and the Tagalog subsets of
  Universal NER ([Mayhew et al., 2024](https://aclanthology.org/2024.naacl-long.243/)).

  The evaluation results are shown in the table below:

vars:
  version: 0.1.0
  # Training
  size: small
  num_steps: 10000
  batch_size: 8

directories:
  - "checkpoints"
  - "models"

env:
  HF_TOKEN: HF_TOKEN
  TOKENIZERS_PARALLELISM: TOKENIZERS_PARALLELISM

commands:
  - name: "finetune-gliner"
    help: "Finetune the GliNER model using TLUnified-NER"
    script:
      - mkdir -p models/gliner_${vars.size}
      - mkdir -p checkpoints/ckpt_gliner_${vars.size}
      - >-
        python train.py 
          gliner-community/gliner_${vars.size}-v2.5
          models/gliner_${vars.size}
          --checkpoint-dir checkpoints/ckpt_gliner_${vars.size}
          --push-to-hub ljvmiranda921/tl_gliner_${vars.size}
          --num-steps ${vars.num_steps}
          --batch-size ${vars.batch_size}
          --dataset ljvmiranda921/tlunified-ner
    outputs:
      - models/gliner_${vars.size}
      - checkpoints/ckpt_gliner_${vars.size}

  - name: "eval-gliner"
    help: "Evaluate trained GliNER models on the TLUnified-NER and Universal NER test sets"
    script:
      - >-
        python eval.py
          metrics/tl_gliner_${vars.size}/
          --model-name ljvmiranda921/tl_gliner_${vars.size}
          --datasets ljvmiranda921/tlunified-ner,universalner/universal_ner::tl_trg,universalner/universal_ner::tl_ugnayan
    outputs:
      - metrics/tl_gliner_${vars.size}/ljvmiranda921___tlunified-ner.json
      - metrics/tl_gliner_${vars.size}/universalner___universal_ner-tl_trg.json
      - metrics/tl_gliner_${vars.size}/universalner___universal_ner-tl_ugnayan.json
